$OpenBSD$
--- Source/WebKit/gtk/webkit/webkitwebsettings.cpp.orig	Mon Jul  2 13:22:41 2012
+++ Source/WebKit/gtk/webkit/webkitwebsettings.cpp	Mon Jul  2 13:24:24 2012
@@ -120,7 +120,9 @@ enum {
     PROP_ENABLE_DNS_PREFETCHING,
     PROP_ENABLE_WEBGL,
     PROP_ENABLE_WEB_AUDIO,
-    PROP_ENABLE_ACCELERATED_COMPOSITING
+    PROP_ENABLE_ACCELERATED_COMPOSITING,
+    PROP_ENABLE_RUNNING_OF_INSECURE_CONTENT,
+    PROP_ENABLE_DISPLAY_OF_INSECURE_CONTENT
 };
 
 // Create a default user agent string
@@ -953,6 +955,34 @@ static void webkit_web_settings_class_init(WebKitWebSe
                                                          _("Whether WebKit prefetches domain names"),
                                                          TRUE,
                                                          flags));
+
+    /**
+    * WebKitWebSettings:enable-display-of-insecure-content
+    *
+    * Boolean property to control whether insecure (non-https) images / frames 
+    * can be loaded from https pages.
+    */
+    g_object_class_install_property(gobject_class,
+                                    PROP_ENABLE_DISPLAY_OF_INSECURE_CONTENT,
+                                    g_param_spec_boolean("enable-display-of-insecure-content",
+                                                         _("Enable display of insecure content"),
+                                                         _("Controls load of non-https display resources from https pages"),
+                                                         TRUE,
+                                                         flags));
+
+    /**
+    * WebKitWebSettings:enable-running-of-insecure-content
+    *
+    * Boolean property to control whether insecure (non-https) script / CSS / 
+    * plug-ins can be loaded from https pages.
+    */
+    g_object_class_install_property(gobject_class,
+                                    PROP_ENABLE_RUNNING_OF_INSECURE_CONTENT,
+                                    g_param_spec_boolean("enable-running-of-insecure-content",
+                                                         _("Enable running of insecure content"),
+                                                         _("Controls load of non-https script / plug-in resources from https pages."),
+                                                         TRUE,
+                                                         flags));
 }
 
 static void webkit_web_settings_init(WebKitWebSettings* web_settings)
@@ -1128,6 +1158,12 @@ static void webkit_web_settings_set_property(GObject* 
     case PROP_ENABLE_ACCELERATED_COMPOSITING:
         priv->enableAcceleratedCompositing = g_value_get_boolean(value);
         break;
+    case PROP_ENABLE_DISPLAY_OF_INSECURE_CONTENT:
+        priv->enableDisplayOfInsecureContent = g_value_get_boolean(value);
+        break;
+    case PROP_ENABLE_RUNNING_OF_INSECURE_CONTENT:
+        priv->enableRunningOfInsecureContent = g_value_get_boolean(value);
+        break;
     default:
         G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);
         break;
@@ -1292,6 +1328,12 @@ static void webkit_web_settings_get_property(GObject* 
         break;
     case PROP_ENABLE_ACCELERATED_COMPOSITING:
         g_value_set_boolean(value, priv->enableAcceleratedCompositing);
+        break;
+    case PROP_ENABLE_DISPLAY_OF_INSECURE_CONTENT:
+        g_value_set_boolean(value, priv->enableDisplayOfInsecureContent);
+        break;
+    case PROP_ENABLE_RUNNING_OF_INSECURE_CONTENT:
+        g_value_set_boolean(value, priv->enableRunningOfInsecureContent);
         break;
     default:
         G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);
